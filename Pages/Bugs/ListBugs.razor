@using BugBlaze.Data.Models

@page "/listbugs/{id}"

@inject CustomHttpClient Http
@inject AppSettingsService AppSettingsService

<h2>Bugs</h2>
<p>
    <a href="/addproject">Create New Employee</a>
</p>
@if (bugs == null)
{
    <img src="./spinner.gif" />

}
else
{
    <table class='table'>
        <thead>
            <tr>
                <th>Project Name</th>
                <th>Description</th>
                <th>Component</th>
                <th>Company</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bug in bugs)
            {
                <tr>
                    <td>@bug.Description</td>
                    <td>@bug.Component</td>
                    <td>@bug.</td>
                    <td>
                        <a href='/editbug/@bug.Id'>Edit</a>
                        <a href='/deletebug/@bug.Id'>Delete</a>
                    </td>
                </tr>



            }
        </tbody>
    </table>
}

@code {

    [Parameter]
    public string id { get; set; }

    IEnumerable<Bug> bugs;
    @*Bug[] bugs;*@
    @*Project[] projects;*@
IEnumerable<Project> projects;
Bug[] associatedBugs;
string baseUrl;

protected override async Task OnInitializedAsync()
{
    int Id = int.Parse(id);
    baseUrl = AppSettingsService.GetBaseUrl();
    bugs = await Http.GetJsonAsync<IEnumerable<Bug>>(baseUrl + "/api/bugsapi");
    projects = await Http.GetJsonAsync<IEnumerable<Project>>(baseUrl + "/api/projectsapi");

    foreach(Bug bug in bugs)
    {
        if (bug.ProjectId == Id)
        {
            associatedBugs.Append(bug);
        }
    }

}
}     